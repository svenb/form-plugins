{"version":3,"file":"user-checkbox-dynamic.js","sources":["../src/components/user-checkbox-dynamic/user-checkbox-dynamic.config.ts","../src/components/user-checkbox-dynamic/user-checkbox-dynamic.ts"],"sourcesContent":["import { PluginContract } from '@nintex/form-plugin-contract';\r\n\r\nexport const config: PluginContract = {\r\n  controlName: 'Dynamic Checkbox',\r\n  fallbackDisableSubmit: false,\r\n  description: 'Load External Data and create Checkboxs',\r\n  groupName: 'UI',\r\n  version: '1.0',\r\n  properties: {\r\n    data: {\r\n      type: 'string',\r\n      title: 'Data',\r\n      description: 'Select the variable that holds the data for the checkbox',\r\n      required: true,\r\n    },\r\n    columnName: {\r\n      type: 'string',\r\n      title: 'Column Name',\r\n      description: 'The Name of the column to render as options',\r\n      required: true,\r\n    },\r\n    value: {\r\n      title: 'Value',\r\n      type: 'string',\r\n      isValueField: true,\r\n    },\r\n  },\r\n  standardProperties: {\r\n    fieldLabel: true,\r\n    description: false,\r\n    defaultValue: false,\r\n    readOnly: false,\r\n  },\r\n  events: ['ntx-value-change'],\r\n};\r\n","import { PluginContract } from '@nintex/form-plugin-contract';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { config } from './user-checkbox-dynamic.config';\r\n\r\ninterface DynamicJson {\r\n  [key: string]: string;\r\n}\r\n\r\n@customElement('user-checkbox-dynamic')\r\nexport class CustomCheckbox extends LitElement {\r\n  @property({ type: String })\r\n  data!: string;\r\n\r\n  @property({ type: String })\r\n  columnName!: string;\r\n\r\n  static getMetaConfig = (): Promise<PluginContract> | PluginContract => config;\r\n\r\n  static styles = css`\r\n    .checkbox-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .checkbox-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    .checkbox-input {\r\n      margin-right: 5px;\r\n    }\r\n\r\n    .checkbox-label {\r\n      font-size: 14px;\r\n    }\r\n  `;\r\n\r\n  toggleCheckbox(checkbox: DynamicJson) {\r\n    // checkbox.checked = !checkbox.checked;\r\n    const args = {\r\n      bubbles: true,\r\n      cancelable: false,\r\n      composed: true,\r\n      detail: 'laskdjals',\r\n    };\r\n    console.log(checkbox.Name);\r\n    this.requestUpdate();\r\n    const event = new CustomEvent('ntx-value-change', args);\r\n    this.dispatchEvent(event);\r\n    // this.dispatchEvent(new CustomEvent('change', { detail: this.checkboxes }));\r\n  }\r\n\r\n  render() {\r\n    const dataAsJson: DynamicJson[] = JSON.parse(this.data) as DynamicJson[];\r\n    console.log(dataAsJson);\r\n    return html`\r\n      <div class=\"checkbox-container\">\r\n        ${dataAsJson.map(\r\n          (option) => html`\r\n            <div class=\"checkbox-item\">\r\n              <input type=\"checkbox\" id=\"chb\" class=\"checkbox-input\" @change=${() => this.toggleCheckbox(option)} />\r\n              <label class=\"checkbox-label\" for=\"${option[this.columnName]}\">${option[this.columnName]}</label>\r\n            </div>\r\n          `\r\n        )}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n"],"names":["config","controlName","fallbackDisableSubmit","description","groupName","version","properties","data","type","title","required","columnName","value","isValueField","standardProperties","fieldLabel","defaultValue","readOnly","events","CustomCheckbox","_decorate","customElement","_initialize","_LitElement","_LitElement2","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_assertThisInitialized","_createClass","F","d","kind","decorators","property","String","key","css","_templateObject","_taggedTemplateLiteral","toggleCheckbox","checkbox","bubbles","cancelable","composed","detail","console","log","Name","requestUpdate","event","CustomEvent","dispatchEvent","render","_this2","dataAsJson","JSON","parse","html","_templateObject2","map","option","_templateObject3","LitElement"],"mappings":"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"}