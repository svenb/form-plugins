{"version":3,"file":"user-checkbox-dynamic.js","sources":["../src/components/user-checkbox-dynamic/user-checkbox-dynamic.config.ts","../src/components/user-checkbox-dynamic/user-checkbox-dynamic.ts"],"sourcesContent":["import { PluginContract } from '@nintex/form-plugin-contract';\r\n\r\nexport const config: PluginContract = {\r\n  controlName: 'Dynamic Checkbox',\r\n  fallbackDisableSubmit: false,\r\n  description: 'Load External Data and create Checkboxs',\r\n  groupName: 'UI',\r\n  version: '1.0',\r\n  properties: {\r\n    DynamicCheckBoxVal: {\r\n      type: 'string',\r\n      title: 'Data Variable',\r\n      description: 'Data Variable',\r\n    },\r\n    DataStructure: {\r\n      type: 'string',\r\n      title: 'Data Structure',\r\n      description: 'Data Structure',\r\n    },\r\n  },\r\n  standardProperties: {\r\n    fieldLabel: false,\r\n    description: false,\r\n    defaultValue: false,\r\n    readOnly: false,\r\n  },\r\n};\r\n","import { PluginContract } from '@nintex/form-plugin-contract';\r\nimport { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { config } from './user-checkbox-dynamic.config';\r\n\r\n/*interface Checkbox {\r\n  [key: string]: unknown;\r\n}*/\r\n@customElement('user-checkbox-dynamic')\r\nexport class CustomCheckbox extends LitElement {\r\n  static getMetaConfig = (): Promise<PluginContract> | PluginContract => config;\r\n\r\n  @property({ type: String })\r\n  DynamicCheckBoxVal = '[{\"Name\":\"RÃ¼ckmeldung\",\"anzeige\":true,\"ID\":1}]';\r\n\r\n  static styles = css`\r\n    .checkbox-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .checkbox-item {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 5px;\r\n    }\r\n\r\n    .checkbox-input {\r\n      margin-right: 5px;\r\n    }\r\n\r\n    .checkbox-label {\r\n      font-size: 14px;\r\n    }\r\n  `;\r\n\r\n  /* private checkboxes: Checkbox[] = [\r\n    { id: 'checkbox1', label: 'Checkbox 1', checked: true },\r\n    { id: 'checkbox2', label: 'Checkbox 2', checked: false },\r\n    { id: 'checkbox3', label: 'Checkbox 3', checked: true },\r\n  ];\r\n  */\r\n\r\n  constructor() {\r\n    super();\r\n    this.loadCheckboxes();\r\n  }\r\n\r\n  private async loadCheckboxes() {\r\n    try {\r\n      let DynamicCheboxJson = await JSON.parse(this.DynamicCheckBoxVal);\r\n      console.log(DynamicCheboxJson);\r\n      // const response = await fetch('/checkboxes.json'); // Adjust the path if needed\r\n      // this.checkboxes = await response.json();\r\n      this.requestUpdate();\r\n    } catch (error) {\r\n      console.error('Error loading checkboxes:', error);\r\n      console.error(this.DynamicCheckBoxVal);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      ${this.DynamicCheckBoxVal}\r\n      <div class=\"checkbox-container\">\r\n        ${this.checkboxes.map(\r\n          (checkbox) => html`\r\n            <div class=\"checkbox-item\">\r\n              <input type=\"checkbox\" class=\"checkbox-input\" id=\"${checkbox.id}\" .checked=\"${checkbox.checked}\" />\r\n              <label class=\"checkbox-label\" for=\"${checkbox.id}\">${checkbox.label}</label>\r\n            </div>\r\n          `\r\n        )}\r\n      </div>\r\n    `;\r\n  }\r\n}\r\n"],"names":["config","controlName","fallbackDisableSubmit","description","groupName","version","properties","DynamicCheckBoxVal","type","title","DataStructure","standardProperties","fieldLabel","defaultValue","readOnly","CustomCheckbox","_decorate","customElement","_initialize","_LitElement","_LitElement2","_inherits","_super","_createSuper","_this","_classCallCheck","call","_assertThisInitialized","loadCheckboxes","_createClass","F","d","kind","key","value","decorators","property","String","css","_templateObject","_taggedTemplateLiteral","_loadCheckboxes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","DynamicCheboxJson","wrap","_callee$","_context","prev","next","JSON","parse","sent","console","log","requestUpdate","t0","error","stop","apply","arguments","render","html","_templateObject2","checkboxes","map","checkbox","_templateObject3","id","checked","label","LitElement"],"mappings":"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"}